<?xml version="1.0" encoding="UTF-8"?>
<form formType="sheetTemplate" dataType="thirteen.GURPS4e" title="GURPS 4e" name="frmGURPS4e" theme="dark" onNodeReady="formatColors()">
<style>
rectangle {
	color: #272727;
}

label, edit, radioButton, checkBox, comboBox, button{
	fontSize: 14;
	fontFamily: Cambria;
	textTrimming: character;
}

edit, button {
	fontColor: white;
}

button {
	cursor: handPoint;
}

label, radioButton, checkBox, comboBox{
	fontColor: #cdcdcd;
}

radioButton{
	vertTextAlign: center;
	margins: {bottom=7};
}

horzLine{
	strokeColor: #424242;
	margins: {top=7, bottom=7};
	align: top;
}

#recFundo {
	align: client;
}

#imgFundo {
	align: client;
	style: autofit;
	src: "";
	animate: true;
}

label.AtrInrolavel{
	fontStyle: bold;
	width: 43;
	fontSize: 20;
	align: left;
	margins: {left=7};
	hint: Rolar Atributo;
}

button.btnAtrRolavel{
	fontStyle: bold;
	width: 50;
	fontSize: 20;
	align: left;
	hint: Rolar Atributo;
}

edit.edtAtrEditavel{
	width: 37;
	fontSize: 20;
	align: left;
	type: number;
	min: 0;
	horzTextAlign: center;
	margins: {left=3, right=3};
	transparent: true;
	readOnly: true;
	cursor: default;
}

.pts{
	fontFamily: Courier New;
	fontSize: 10;
	fontColor: #9e9e9e;
	align: left;
	vertTextAlign: leading;
	width: 40;
	transparent: true;
	readOnly: true;
	cursor: default;
}

label.SubAttribute{
	align: left;
	fontSize: 8;
	fontStyle: bold;
	width: 70;
	vertTextAlign: center;
}

edit.SubAttribute{
	align:left;
	horzTextAlign: center;
	fontSize: 11;
	width: 35;
	readOnly: true;
	transparent: true;
	cursor: default;
}

radioButton.rdbCarga{
	align: left;
	width: 125;
	cursor: handPoint;
	fontStyle: bold;
	margins: {top=1,left=5};
}

edit.edtTblCargaNum{
	align:left;
	horzTextAlign: center;
	width: 50;
	readOnly: true;
	cursor: default;
	transparent: true;
	type: number;
}

rectangle.LinhadeFora{
	align: client; 
	color: transparent; 
	strokeColor: #272727; 
	strokeSize: 2; 
	xradius: 25; 
	yradius: 25; 
	cornerType: bevel; 
	margins: {top=20, bottom=20};
}

rectangle.LinhaDeDentro{
	align: client; 
	color: transparent; 
	strokeColor: #272727; 
	strokeSize: 1; 
	xradius: 23; 
	yradius: 23; 
	cornerType: bevel; 
	margins: {top=5, right=5, bottom=5, left=5};
}

rectangle.Fundo{
	align: client; 
	color: #272727; 
	xradius: 20; 
	yradius: 20; 
	cornerType: bevel; 
	margins: {top=10, right=10, bottom=10, left=10};
}
</style>
<script><![CDATA[
	
	local function g(NH, nome)
		math.randomseed(math.floor(os.clock()* 1000))
		
		local mesaDoPersonagem = Firecast.getMesaDe(sheet);
		local meuJogador = mesaDoPersonagem.meuJogador
		local meuNick = meuJogador.nick
		
		local dado1 = math.random(1, 6);
		local dado2 = math.random(1, 6);
		local dado3 = math.random(1, 6);
		local resultado = dado1 + dado2 + dado3;
		local diff = math.abs(NH - resultado);
		
		localInitRes = "🎲 ".. meuNick .." [§R][§K1]rolou [§K2]3d6 ≤ " .. NH .. " [§K1]= [§K3]" .. resultado .. " [§K1]{[§K7][".. dado1 .. ", ".. dado2 ..", ".. dado3;
		
		if resultado==18 or (resultado>=17 and NH<=15) or resultado-10>=NH then
		  mesaDoPersonagem.activeChat:enviarMensagem(localInitRes .."][§K1]}, [§K4]Falha Crítica [§K1]por [§K2]" .. diff .. " [§K14]<<[§B]Teste de " .. nome .. "[§B], NH ".. NH ..">>");
		elseif resultado<=4 or (resultado<=5 and NH>=15) or (resultado<=6 and NH>=16) then
		  mesaDoPersonagem.activeChat:enviarMensagem(localInitRes .."][§K1]}, [§K9]Sucesso Crítico [§K1]por [§K2]" .. diff .. " [§K14]<<[§B]Teste de " .. nome .. "[§B], NH ".. NH ..">>");
		elseif resultado > NH then
		  mesaDoPersonagem.activeChat:enviarMensagem(localInitRes .."][§K1]}, [§K7]Falha [§K1]por [§K2]" .. diff .. " [§K14]<<[§B]Teste de " .. nome .. "[§B], NH ".. NH ..">>");
		else
		  mesaDoPersonagem.activeChat:enviarMensagem(localInitRes .."][§K1]}, [§K3]Sucesso [§K1]por [§K2]" .. diff .. " [§K14]<<[§B]Teste de " .. nome .. "[§B], NH ".. NH ..">>");
		end;
	end
	
	function calcularDanoBase(st)
		local tabelaDano = {
			[1] = {"1d-6", "1d-5"},		[2] = {"1d-6", "1d-5"},		[3] = {"1d-5", "1d-4"},		[4] = {"1d-5", "1d-4"},		[5] = {"1d-4", "1d-3"},
			[6] = {"1d-4", "1d-3"},		[7] = {"1d-3", "1d-2"},		[8] = {"1d-3", "1d-2"},     [9] = {"1d-2", "1d-1"},		[10] = {"1d-2", "1d"},
			[11] = {"1d-1", "1d+1"},	[12] = {"1d-1", "1d+2"},    [13] = {"1d", "2d-1"},		[14] = {"1d", "2d"},        [15] = {"1d+1", "2d+1"},
			[16] = {"1d+1", "2d+2"},    [17] = {"1d+2", "3d-1"},	[18] = {"1d+2", "3d"},      [19] = {"2d-1", "3d+1"},	[20] = {"2d-1", "3d+2"},
			[21] = {"2d", "4d-1"},		[22] = {"2d", "4d"},		[23] = {"2d+1", "4d+1"},	[24] = {"2d+1", "4d+2"},    [25] = {"2d+2", "5d-1"},
			[26] = {"2d+2", "5d"},      [27] = {"3d-1", "5d+1"},	[28] = {"3d-1", "5d+1"},    [29] = {"3d", "5d+2"},		[30] = {"3d", "5d+2"},
			[31] = {"3d+1", "6d-1"},	[32] = {"3d+1", "6d-1"},    [33] = {"3d+2", "6d"},		[34] = {"3d+2", "6d"},      [35] = {"4d-1", "6d+1"},
			[36] = {"4d-1", "6d+1"},    [37] = {"4d", "6d+2"},		[38] = {"4d", "6d+2"},      [39] = {"4d+1", "7d-1"},	[40] = {"4d+1", "7d-1"},
			[41] = {"4d+1", "7d-1"},	[42] = {"4d+1", "7d-1"},	[43] = {"4d+1", "7d-1"},	[44] = {"4d+1", "7d-1"},    [45] = {"5d", "7d+1"},
			[46] = {"5d", "7d+1"},      [47] = {"5d", "7d+1"},      [48] = {"5d", "7d+1"},      [49] = {"5d", "7d+1"},		[50] = {"5d+2", "8d-1"},
			[51] = {"5d+2", "8d-1"},	[52] = {"5d+2", "8d-1"},	[53] = {"5d+2", "8d-1"},	[54] = {"5d+2", "8d-1"},    [55] = {"6d", "8d+1"},
			[56] = {"6d", "8d+1"},      [57] = {"6d", "8d+1"},      [58] = {"6d", "8d+1"},      [59] = {"6d", "8d+1"},		[60] = {"7d-1", "9d"},
			[61] = {"7d-1", "9d"},		[62] = {"7d-1", "9d"},		[63] = {"7d-1", "9d"},		[64] = {"7d-1", "9d"},		[65] = {"7d+1", "9d+2"},    
			[66] = {"7d+1", "9d+2"},    [67] = {"7d+1", "9d+2"},    [68] = {"7d+1", "9d+2"},    [69] = {"7d+1", "9d+2"},	[70] = {"8d", "10d"},		
			[71] = {"8d", "10d"},		[72] = {"8d", "10d"},		[73] = {"8d", "10d"},		[74] = {"8d", "10d"},		[75] = {"8d+2", "10d+2"},   
			[76] = {"8d+2", "10d+2"},   [77] = {"8d+2", "10d+2"},   [78] = {"8d+2", "10d+2"},   [79] = {"8d+2", "10d+2"},	[80] = {"9d", "11d"},       
			[81] = {"9d", "11d"},		[82] = {"9d", "11d"},		[83] = {"9d", "11d"},		[84] = {"9d", "11d"},		[85] = {"9d+2", "11d+2"},   
			[86] = {"9d+2", "11d+2"},   [87] = {"9d+2", "11d+2"},   [88] = {"9d+2", "11d+2"},	[89] = {"9d+2", "11d+2"},	[90] = {"10d", "12d"},		
			[91] = {"10d", "12d"},		[92] = {"10d", "12d"},		[93] = {"10d", "12d"},		[94] = {"10d", "12d"},      [95] = {"10d+2", "12d+2"},  
			[96] = {"10d+2", "12d+2"},  [97] = {"10d+2", "12d+2"},  [98] = {"10d+2", "12d+2"},	[99] = {"10d+2", "12d+2"},	[100] = {"11d", "13d"}
		}
		
		-- Busca direta na tabela
		if tabelaDano[st] then
			return tabelaDano[st][1], tabelaDano[st][2]
		end
		
		-- Para ST acima de 100, calcula baseado no padrão
		if st > 100 then
			local extraDice = math.floor((st - 100) / 10)
			return (11 + extraDice) .. "d", (13 + extraDice) .. "d"
		end
		
		if st < 1 then
			local thrust = '1d' .. tostring(-2 - math.floor((8 - st) / 2) +1)
			local swing = '1d' .. tostring(-2 - math.floor((8 - st) / 2))
			return thrust, swing
		end
	end
	
	function calcularDanoRevis(st)		
		local baseDamage = {
			[1] = {"1d-11", "1d-9"},	[2] = {"1d-10", "1d-8"},	[3] = {"1d-9", "1d-7"},	[4] = {"1d-8", "1d-6"},	[5] = {"1d-7", "1d-5"},
			[6] = {"1d-6", "1d-4"},		[7] = {"1d-5", "1d-3"},		[8] = {"1d-4", "1d-2"},	[9] = {"1d-3", "1d-1"},	[10] = {"1d-2", "1d"},
			[11] = {"1d-1", "1d+1"},	[12] = {"1d", "1d+2"},		[13] = {"1d+1", "2d-1"},[14] = {"1d+2", "2d"},	[15] = {"2d-1", "2d+1"},
			[16] = {"2d", "2d+2"},		[17] = {"2d+1", "3d-1"},	[18] = {"2d+2", "3d"},	[19] = {"3d-1", "3d+1"},[20] = {"3d", "3d+2"}
		}
		
		if st <= 9 then
			local thrust = '1d-' .. (12-st)
			local swing = '1d-' .. (10-st)
			return thrust, swing
		end
		
		if st > 9 and st <= 20 then
			return baseDamage[st][1], baseDamage[st][2]
		end
		
		-- Find the base ST in range 17-20
		local baseST = 17 + ((st - 17) % 4)
		local extraST = st - baseST
		local extraDice = math.floor(extraST / 4)
		
		-- Get base damage for the calculated base ST
		local baseThrust = baseDamage[baseST][1]
		local baseSwing = baseDamage[baseST][2]
		
		-- Parse base damage and add extra dice
		local function addExtraDice(damageStr, extra)
			if extra == 0 then
				return damageStr
			end

			local dice, modifier = damageStr:match("(%d+)d([%+%-]?%d*)")
			dice = tonumber(dice)

			if modifier == "" then
				modifier = 0
			else
				modifier = tonumber(modifier)
			end

			dice = dice + extra

			if modifier == 0 then
				return dice .. "d"
			elseif modifier > 0 then
				return dice .. "d+" .. modifier
			else
				return dice .. "d" .. modifier
			end
		end

		
		local thrust = addExtraDice(baseThrust, extraDice)
		local swing = addExtraDice(baseSwing, extraDice)
		
		return thrust, swing
	end
	
	local function calcSomaPontosAtributos()
		local somaPts = {
			tonumber(string.sub(sheet.STpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.DXpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.IQpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.HTpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.HPpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.Willpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.Perpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.FPpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.BasicSpeedpts or "", 2, -2)) or 0,
			tonumber(string.sub(sheet.BasicMovepts or "", 2, -2)) or 0			
		}
		
		local finalSum = 0
		for i=1, #somaPts do
			finalSum = finalSum + somaPts[i]
		end
		
		sheet.Atributospts = string.format('[%02d]', finalSum)
	end
	
	local function calcAtributos()
		if not sheet.fldDisassociarAtr then
			sheet.ST = 10 + (tonumber(string.sub(sheet.STpts, 2, -2)) / sheet.custoST)
			sheet.DX = 10 + (tonumber(string.sub(sheet.DXpts, 2, -2)) / sheet.custoDX)
			sheet.IQ = 10 + (tonumber(string.sub(sheet.IQpts, 2, -2)) / sheet.custoIQ)
			sheet.HT = 10 + (tonumber(string.sub(sheet.HTpts, 2, -2)) / sheet.custoHT)
			
			sheet.HP	= sheet.ST + (tonumber(string.sub(sheet.HPpts, 2, -2)) / sheet.custoHP)
			sheet.Will	= sheet.IQ + (tonumber(string.sub(sheet.Willpts, 2, -2)) / sheet.custoWill)
			sheet.Per	= sheet.IQ + (tonumber(string.sub(sheet.Perpts, 2, -2)) / sheet.custoPer)
			sheet.FP	= sheet.HT + (tonumber(string.sub(sheet.FPpts, 2, -2)) / sheet.custoFP)
			
			sheet.BasicSpeed = ((sheet.DX + sheet.HT) / 4) + ((tonumber(string.sub(sheet.BasicSpeedpts, 2, -2)) / sheet.custoBasicSpeed) * 0.25)
			sheet.BasicMove = math.floor(sheet.BasicSpeed) + (tonumber(string.sub(sheet.BasicMovepts, 2, -2)) / sheet.custoBasicMove)
			
			if not sheet.fldTabelaSTRev then
				sheet.ThrDmg, sheet.SwDmg = calcularDanoBase(sheet.ST)
				
				if((sheet.ST ^2) / 5) < 10 then
					sheet.BasicLift = ((sheet.ST ^2) / 5)
				else
					sheet.BasicLift = math.floor(((sheet.ST ^2) / 5) + 0.5)
				end
				
				if sheet.ST < 1 then sheet.BasicLift = 0 end
			else
				sheet.ThrDmg, sheet.SwDmg = calcularDanoRevis(sheet.ST)
			
				if(2 * 10 ^ (sheet.ST / 10)) < 10 then
					sheet.BasicLift = math.floor(2 * 10 ^ (sheet.ST / 10) * 10 + 0.5) / 10
				else
					sheet.BasicLift = math.floor(2 * 10 ^ (sheet.ST / 10) + 0.5)
				end
			end
		end
		
		sheet.Carga01 = sheet.BasicLift * 1
		sheet.Carga02 = sheet.BasicLift * 2
		sheet.Carga03 = sheet.BasicLift * 3
		sheet.Carga04 = sheet.BasicLift * 6
		sheet.Carga05 = sheet.BasicLift * 10
		
		sheet.Move01 = math.max(math.floor(sheet.BasicMove * 1), 1)
		sheet.Move02 = math.max(math.floor(sheet.BasicMove * 0.8), 1)
		sheet.Move03 = math.max(math.floor(sheet.BasicMove * 0.6), 1)
		sheet.Move04 = math.max(math.floor(sheet.BasicMove * 0.4), 1)
		sheet.Move05 = math.max(math.floor(sheet.BasicMove * 0.2), 1)
		
		sheet.Dodge01 = math.max(math.floor(sheet.BasicSpeed +3 - 0) + sheet.EnhancedDodge, 1)
		sheet.Dodge02 = math.max(math.floor(sheet.BasicSpeed +3 - 1) + sheet.EnhancedDodge, 1)
		sheet.Dodge03 = math.max(math.floor(sheet.BasicSpeed +3 - 2) + sheet.EnhancedDodge, 1)
		sheet.Dodge04 = math.max(math.floor(sheet.BasicSpeed +3 - 3) + sheet.EnhancedDodge, 1)
		sheet.Dodge05 = math.max(math.floor(sheet.BasicSpeed +3 - 4) + sheet.EnhancedDodge, 1)
		calcSomaPontosAtributos()
	end
	
	local function formatColors()
		local campos = {
			{self.edtSTpts, sheet.STpts},
			{self.edtHPpts, sheet.HPpts},
			{self.edtDXpts, sheet.DXpts},
			{self.edtWillpts, sheet.Willpts},
			{self.edtIQpts, sheet.IQpts},
			{self.edtPerpts, sheet.Perpts},
			{self.edtHTpts, sheet.HTpts},
			{self.edtFPpts, sheet.FPpts},
			{self.edtBasicSpeedpts, sheet.BasicSpeedpts},
			{self.edtBasicMovepts, sheet.BasicMovepts},
			{self.edtAtributospts, sheet.Atributospts}
		}
		
		for i=1, #campos do
			if tonumber(string.sub(campos[i][2] or "[00]", 2, -2)) < 0 then
				campos[i][1].fontColor = 'red'
			elseif tonumber(string.sub(campos[i][2] or "[00]", 2, -2)) == 0 then
				campos[i][1].fontColor = '#9e9e9e'
			else
				campos[i][1].fontColor = '#00ff78'
			end
		end
	end
	
	local function resetAtributos()
		local atributos = {'ST','DX','IQ','HT','HP','Will','Per','FP'}
		
		for i=1, #atributos do
			sheet[atributos[i]] = 10
			sheet[atributos[i] .. 'pts'] = '[00]'
		end
		
		sheet['BasicSpeedpts'] = '[00]'
		sheet['BasicMovepts'] = '[00]'
		sheet['BasicSpeed'] = 5
		sheet['BasicMove'] = 5
		sheet['BasicLift'] = 20
		sheet['ThrDmg'] = '1d-2'
		sheet['SwDmg'] = '1d'
		
		sheet.custoST = 10
		sheet.custoDX = 20
		sheet.custoIQ = 20
		sheet.custoHT = 10
		
		sheet.custoHP = 2
		sheet.custoWill = 10
		sheet.custoPer = 10
		sheet.custoFP = 3
		
		sheet.custoBasicSpeed = 5
		sheet.custoBasicMove = 5
		
		sheet.Carga01 = sheet.BasicLift * 1
		sheet.Carga02 = sheet.BasicLift * 2
		sheet.Carga03 = sheet.BasicLift * 3
		sheet.Carga04 = sheet.BasicLift * 6
		sheet.Carga05 = sheet.BasicLift * 10
		
		sheet.Move01 = math.max(math.floor(sheet.BasicMove * 1), 1)
		sheet.Move02 = math.max(math.floor(sheet.BasicMove * 0.8), 1)
		sheet.Move03 = math.max(math.floor(sheet.BasicMove * 0.6), 1)
		sheet.Move04 = math.max(math.floor(sheet.BasicMove * 0.4), 1)
		sheet.Move05 = math.max(math.floor(sheet.BasicMove * 0.2), 1)
		
		sheet.Dodge01 = math.max(math.floor(sheet.BasicSpeed +3 - 0), 1)
		sheet.Dodge02 = math.max(math.floor(sheet.BasicSpeed +3 - 1), 1)
		sheet.Dodge03 = math.max(math.floor(sheet.BasicSpeed +3 - 2), 1)
		sheet.Dodge04 = math.max(math.floor(sheet.BasicSpeed +3 - 3), 1)
		sheet.Dodge05 = math.max(math.floor(sheet.BasicSpeed +3 - 4), 1)
		
		sheet.EnhancedDodge = 0
		
		formatColors()
	end
	
	function tratarInputDano(input, default)
		
		-- Função para verificar se a string está no formato correto (X)d+(Y)
		local function isValidFormat(str)
			-- Padrão: número positivo + 'd' + sinal opcional + número
			-- Aceita: Xd+Y, Xd-Y, Xd (onde Y = 0)
			local pattern = "^(%d+)d([%+%-]?)(%d*)$"
			local x, sign, y = str:match(pattern)
			
			if not x then
				return false
			end
			
			-- Se não tem sinal nem número após 'd', Y = 0 (formato válido)
			if sign == "" and y == "" then
				return true
			end
			
			-- Se tem sinal mas não tem número, é inválido
			if sign ~= "" and y == "" then
				return false
			end
			
			-- Se não tem sinal mas tem número, é inválido (deve ser +Y ou -Y)
			if sign == "" and y ~= "" then
				return false
			end
			
			return true
		end
		
		-- Função para normalizar a string removendo espaços e corrigindo formato
		local function normalizeString(str)
			-- Remove todos os espaços
			str = str:gsub("%s+", "")
			
			-- Verifica padrões comuns e corrige
			local x, sign, y = str:match("^(%d+)d([%+%-])(%d+)$")
			
			if x and sign and y then
				-- Se Y é 0, remove o +0
				if y == "0" and sign == "+" then
					return x .. "d"
				else
					return x .. "d" .. sign .. y
				end
			end
			
			-- Verifica se é apenas Xd (sem modificador)
			if str:match("^%d+d$") then
				return str
			end
			
			-- Verifica padrão sem sinal (assume positivo)
			local x2, y2 = str:match("^(%d+)d(%d+)$")
			if x2 and y2 then
				if y2 == "0" then
					return x2 .. "d"
				else
					return x2 .. "d+" .. y2
				end
			end
			
			return str
		end
		
		-- 1. Verificar se já está no formato correto
		if isValidFormat(input) then
			return input
		end
		
		-- 2. Tentar normalizar/corrigir o formato
		local normalized = normalizeString(input)
		
		-- 3. Verificar se após a normalização está no formato correto
		if isValidFormat(normalized) then
			return normalized
		end
		
		-- 4. Se não pode ser corrigido, retornar o valor padrão
		showMessage('Formato de dano inválido!')
		return default
	end

]]></script>
<import file="templates.lfm" />

	<rectangle name="recFundo" />
	<image name="imgFundo" field="URLImagemFundo" onResize="self.imgFundo:needRepaint();" />
	<dataLink field="URLImagemFundo" defaultValue="/images/background.png" onChange="self.imgFundo:needRepaint();" />
	<scrollBox align="client">
		
		<!-- Moldura da ficha -->
		<flowLayout align="top" autoHeight="true" horzAlign="center">
			<flowPart align="top" minWidth="1020" maxWidth="1020" height="1600">
				<rectangle class="LinhadeFora">
					<rectangle class="LinhadeDentro">
						<rectangle class="Fundo">
						
							<flowLayout align="top" autoHeight="true" horzAlign="center">
							
								<!-- Parte Esquerda da ficha -->
								<flowPart minWidth="650" maxWidth="650" height="1530">
								</flowPart>
								
								<!-- Parte Direita da ficha -->
								<flowPart minWidth="340" maxWidth="340" height="1530" padding="{right=15, left=15}">
									<rectangle width="320" height="1530" color="#202020" />
									<rectangle width="340" height="1530" color="#202020" xradius="20" yradius="20" cornerType="bevel" />
									
									<!-- Atributos -->
									<DivisorAtributos />
									
									<layout align="top" height="140">
										<LinhaAtributosDiferentes atributo01="ST" atributo02="HP" />
										<LinhaAtributosIguais	  atributo01="DX" atributo02="Will" />
										<LinhaAtributosIguais	  atributo01="IQ" atributo02="Per" />
										<LinhaAtributosDiferentes atributo01="HT" atributo02="FP" />
									</layout>
									
									<horzLine />
									
									<!-- Atributos Derivados -->
									<atributosDerivados />
									<layout align="top" height="100" />
									<DivisorD texto="N Í V E I S   D E   C A R G A" largura="250" />
									<layout align="top" height="25" margins="{bottom=5}">
										<rectangle align="client" color="#101010" margins="{right=10}" xradius= "3" yradius="3" cornerType="bevel">
											<label text=" LIMIAR DE CARGA" align="left" width="160" margins="{left=25}" fontStyle="bold" fontColor="white" />
											<label text="MOVE" align="left" width="48" fontStyle="bold" fontColor="white" />
											<label text="DODGE" align="left" fontStyle="bold" fontColor="white" />
										</rectangle>
									</layout>
									<layout align="top" height="25" margins="{bottom=5}">
										<radioButton groupName="nvlCarga" class="rdbCarga" field="rdbCarga" text=" Nula ₍₀₎" fieldValue="nula" />
										<edit class="edtTblCargaNum" name="edtCarga01" field="Carga01" horzTextAlign="leading" />
										<dataLink field="Carga01" defaultValue="20" />
										<edit class="edtTblCargaNum" name="edtMove01" field="Move01" />
										<dataLink field="Move01" defaultValue="5" />
										<edit class="edtTblCargaNum" name="edtDodge01" field="Dodge01" />
										<dataLink field="Dodge01" defaultValue="8" />
									</layout>
									<layout align="top" height="25" margins="{bottom=5}">
										<rectangle align="client" color="#272727" margins="{right=10}" xradius= "3" yradius="3" cornerType="bevel">
											<radioButton groupName="nvlCarga" class="rdbCarga" field="rdbCarga" text=" Leve ₍₁₎" fieldValue="leve" />
											<edit class="edtTblCargaNum" name="edtCarga02" field="Carga02" horzTextAlign="leading" />
											<dataLink field="Carga02" defaultValue="40" />
											<edit class="edtTblCargaNum" name="edtMove02" field="Move02" />
											<dataLink field="Move02" defaultValue="4" />
											<edit class="edtTblCargaNum" name="edtDodge02" field="Dodge02" />
											<dataLink field="Dodge02" defaultValue="7" />
										</rectangle>
									</layout>
									<layout align="top" height="25" margins="{bottom=5}">
										<radioButton groupName="nvlCarga" class="rdbCarga" field="rdbCarga" text=" Média ₍₂₎" fieldValue="media" />
										<edit class="edtTblCargaNum" name="edtCarga03" field="Carga03" horzTextAlign="leading" />
										<dataLink field="Carga03" defaultValue="60" />
										<edit class="edtTblCargaNum" name="edtMove03" field="Move03" />
										<dataLink field="Move03" defaultValue="3" />
										<edit class="edtTblCargaNum" name="edtDodge03" field="Dodge03" />
										<dataLink field="Dodge03" defaultValue="6" />
									</layout>
									<layout align="top" height="25" margins="{bottom=5}">
										<rectangle align="client" color="#272727" margins="{right=10}" xradius= "3" yradius="3" cornerType="bevel">
											<radioButton groupName="nvlCarga" class="rdbCarga" field="rdbCarga" text=" Pesada ₍₃₎" fieldValue="pesada" />
											<edit class="edtTblCargaNum" name="edtCarga04" field="Carga04" horzTextAlign="leading" />
											<dataLink field="Carga04" defaultValue="120" />
											<edit class="edtTblCargaNum" name="edtMove04" field="Move04" />
											<dataLink field="Move04" defaultValue="2" />
											<edit class="edtTblCargaNum" name="edtDodge04" field="Dodge04" />
											<dataLink field="Dodge04" defaultValue="5" />
										</rectangle>
									</layout>
									<layout align="top" height="25" margins="{bottom=5}">
										<radioButton groupName="nvlCarga" class="rdbCarga" field="rdbCarga" text=" Mt. Pesada ₍₄₎" fieldValue="mtpesada" />
										<edit class="edtTblCargaNum" name="edtCarga05" field="Carga05" horzTextAlign="leading" />
										<dataLink field="Carga05" defaultValue="200" />
										<edit class="edtTblCargaNum" name="edtMove05" field="Move05" />
										<dataLink field="Move05" defaultValue="1" />
										<edit class="edtTblCargaNum" name="edtDodge05" field="Dodge05" />
										<dataLink field="Dodge05" defaultValue="4" />
									</layout>
									<dataLink field="rdbCarga" defaultValue="nula" />
									
									<image url="/images/logo.png" height="45" style="proportional" align="bottom" margins="{left=142,bottom=20}"/>
								</flowPart>
							</flowLayout>
						
						</rectangle>
					</rectangle>
				</rectangle>
			</flowPart>
		</flowLayout>
		
		<!-- Botão de troca de fundo da ficha -->
		<btnImgFundo />
		
	</scrollBox>
</form>